


ARM Macro Assembler    Page 1 


    1 00000000         ; ------------------------------------------------------
                       ------------
    2 00000000         ; --  _____       ______  _____                         
                                  -
    3 00000000         ; -- |_   _|     |  ____|/ ____|                        
                                  -
    4 00000000         ; --   | |  _ __ | |__  | (___    Institute of Embedded 
                       Systems    -
    5 00000000         ; --   | | | '_ \|  __|  \___ \   Zurich University of  
                                  -
    6 00000000         ; --  _| |_| | | | |____ ____) |  Applied Sciences      
                                  -
    7 00000000         ; -- |_____|_| |_|______|_____/   8401 Winterthur, Switz
                       erland     -
    8 00000000         ; ------------------------------------------------------
                       ------------
    9 00000000         ; --
   10 00000000         ; -- add64.s
   11 00000000         ; --
   12 00000000         ; -- CT1 P05 64 Bit Addition
   13 00000000         ; --
   14 00000000         ; -- $Id: add64.s 3712 2016-10-20 08:44:57Z kesr $
   15 00000000         ; ------------------------------------------------------
                       ------------
   16 00000000         ;Directives
   17 00000000                 PRESERVE8
   18 00000000                 THUMB
   19 00000000         
   20 00000000         ; ------------------------------------------------------
                       ------------
   21 00000000         ; -- Symbolic Literals
   22 00000000         ; ------------------------------------------------------
                       ------------
   23 00000000 60000200 
                       ADDR_DIP_SWITCH_31_0
                               EQU              0x60000200
   24 00000000 60000210 
                       ADDR_BUTTONS
                               EQU              0x60000210
   25 00000000 60000340 
                       ADDR_LCD_RED
                               EQU              0x60000340
   26 00000000 60000342 
                       ADDR_LCD_GREEN
                               EQU              0x60000342
   27 00000000 60000344 
                       ADDR_LCD_BLUE
                               EQU              0x60000344
   28 00000000 60000330 
                       ADDR_LCD_BIN
                               EQU              0x60000330
   29 00000000 00000001 
                       MASK_KEY_T0
                               EQU              0x00000001
   30 00000000 0000FFFF 
                       BACKLIGHT_FULL
                               EQU              0xffff
   31 00000000         
   32 00000000         ; ------------------------------------------------------



ARM Macro Assembler    Page 2 


                       ------------
   33 00000000         ; -- myCode
   34 00000000         ; ------------------------------------------------------
                       ------------
   35 00000000                 AREA             MyCode, CODE, READONLY
   36 00000000         
   37 00000000         main    PROC
   38 00000000                 EXPORT           main
   39 00000000         
   40 00000000         ; INTRODUCTION
   41 00000000         ; 64 Bit Sum-Variable as Output
   42 00000000         ; Every time T0 is pressed add 32Bit from Switch 0 - 31 
                       to Sum-Variable
   43 00000000         ; The sum shall be display on the LCD Display
   44 00000000         
   45 00000000         user_prog
   46 00000000 4F0F            LDR              R7, =ADDR_LCD_BLUE ; load base 
                                                            address of pwm blue
                                                            
   47 00000002 4E10            LDR              R6, =BACKLIGHT_FULL ; backlight
                                                             full blue
   48 00000004 803E            STRH             R6, [R7]    ; write pwm registe
                                                            r
   49 00000006         
   50 00000006 4810            LDR              R0, =0      ; lower 32 bits of 
                                                            total sum
   51 00000008 490F            LDR              R1, =0      ; higher 32 bits of
                                                             total sum
   52 0000000A         endless
   53 0000000A F000 F80D       BL               waitForKey  ; wait for key T0 t
                                                            o be pressed
   54 0000000E         
   55 0000000E         ; STUDENTS: To be programmed
   56 0000000E         
   57 0000000E         ; load input value from Switch 0 - 31
   58 0000000E         ; do not use R0, this is for the lower 32 bits (word)
   59 0000000E         ; do not use R1, this is for the higher 32 bits (word)
   60 0000000E 4A0F            LDR              R2, =ADDR_DIP_SWITCH_31_0
   61 00000010         
   62 00000010         ; read inputvalue and store it in R0
   63 00000010 6813            LDR              R3, [R2]
   64 00000012         
   65 00000012         ; add input value to the total sum in R0
   66 00000012 18C0            ADDS             R0, R0, R3
   67 00000014         
   68 00000014         ; read the processor flags
   69 00000014 F3EF 8200       MRS              R2, APSR
   70 00000018         
   71 00000018         ; remove negative and zero flags --> (nzcv'0000'0000'000
                       0'0000'0000'0000'0000) => (cv00'0000'0000'0000'0000'0000
                       '0000'0000)
   72 00000018 0092            LSLS             R2, R2, #2
   73 0000001A         
   74 0000001A         ; remove all bits, that only the carry-flag is set
   75 0000001A         ; Right shifting with 31 --> (0000'000c)
   76 0000001A 0FD2            LSRS             R2, R2, #31
   77 0000001C         
   78 0000001C         ; if the carry is set, we have to increase the higher 32
                        bits by 1



ARM Macro Assembler    Page 3 


   79 0000001C         ; Addition with R1 (higher 32 Bits) and Carry-Flag (+1 i
                       f carry is set, +0 if carry is not set)
   80 0000001C 1889            ADDS             R1, R1, R2
   81 0000001E         
   82 0000001E         ; load address of lcd binary interface as mentioned in P
                       DF
   83 0000001E 4D0C            LDR              R5, =ADDR_LCD_BIN
   84 00000020         
   85 00000020         ; now we have to combine the lower(R0) and higher(R1) 32
                       bits
   86 00000020         ; store the lower 32bits to the lcd binary interface wit
                       hout an offset -> lower
   87 00000020 6028            STR              R0, [R5, #0]
   88 00000022         
   89 00000022         ; to combine the higher to the lower bits, we have to wr
                       ite it additionally
   90 00000022         ; we can store it to the lcd binary interface with the o
                       ffset 
   91 00000022 6069            STR              R1, [R5, #4]
   92 00000024         
   93 00000024         
   94 00000024         
   95 00000024         
   96 00000024         
   97 00000024         ; END: To be programmed
   98 00000024 E7F1            B                endless
   99 00000026 00 00           ALIGN
  100 00000028         
  101 00000028         
  102 00000028         ;----------------------------------------------------
  103 00000028         ; Subroutines
  104 00000028         ;----------------------------------------------------
  105 00000028         
  106 00000028         ; wait for key to be pressed and released
  107 00000028         waitForKey
  108 00000028 B407            PUSH             {R0, R1, R2}
  109 0000002A 490A            LDR              R1, =ADDR_BUTTONS ; laod base a
                                                            ddress of keys
  110 0000002C 4A0A            LDR              R2, =MASK_KEY_T0 
                                                            ; load key mask T0
  111 0000002E         
  112 0000002E         waitForPress
  113 0000002E 7808            LDRB             R0, [R1]    ; load key values
  114 00000030 4210            TST              R0, R2      ; check, if key T0 
                                                            is pressed
  115 00000032 D0FC            BEQ              waitForPress
  116 00000034         
  117 00000034         waitForRelease
  118 00000034 7808            LDRB             R0, [R1]    ; load key values
  119 00000036 4210            TST              R0, R2      ; check, if key T0 
                                                            is released
  120 00000038 D1FC            BNE              waitForRelease
  121 0000003A         
  122 0000003A BC07            POP              {R0, R1, R2}
  123 0000003C 4770            BX               LR
  124 0000003E 00 00           ALIGN
  125 00000040         
  126 00000040         ; ------------------------------------------------------
                       ------------



ARM Macro Assembler    Page 4 


  127 00000040         ; End of code
  128 00000040         ; ------------------------------------------------------
                       ------------
  129 00000040                 ENDP
  130 00000040                 END
              60000344 
              0000FFFF 
              00000000 
              60000200 
              60000330 
              60000210 
              00000001 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\build\add64.d -o.\build\add64.o -I.\RTE\_Target_1 -IC:\Keil_v5\A
RM\PACK\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Keil_v5\ARM\PACK\InES\CTBo
ard14_DFP\4.0.2\Device\Include\m0 -IC:\Keil_v5\ARM\PACK\InES\CTBoard14_DFP\4.0.
2\HAL\Include -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --pred
efine="__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1" --list=.\build\ad
d64.lst app\add64.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyCode 00000000

Symbol: MyCode
   Definitions
      At line 35 in file app\add64.s
   Uses
      None
Comment: MyCode unused
endless 0000000A

Symbol: endless
   Definitions
      At line 52 in file app\add64.s
   Uses
      At line 98 in file app\add64.s
Comment: endless used once
main 00000000

Symbol: main
   Definitions
      At line 37 in file app\add64.s
   Uses
      At line 38 in file app\add64.s
Comment: main used once
user_prog 00000000

Symbol: user_prog
   Definitions
      At line 45 in file app\add64.s
   Uses
      None
Comment: user_prog unused
waitForKey 00000028

Symbol: waitForKey
   Definitions
      At line 107 in file app\add64.s
   Uses
      At line 53 in file app\add64.s
Comment: waitForKey used once
waitForPress 0000002E

Symbol: waitForPress
   Definitions
      At line 112 in file app\add64.s
   Uses
      At line 115 in file app\add64.s
Comment: waitForPress used once
waitForRelease 00000034

Symbol: waitForRelease
   Definitions
      At line 117 in file app\add64.s
   Uses
      At line 120 in file app\add64.s
Comment: waitForRelease used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_BUTTONS 60000210

Symbol: ADDR_BUTTONS
   Definitions
      At line 24 in file app\add64.s
   Uses
      At line 109 in file app\add64.s
Comment: ADDR_BUTTONS used once
ADDR_DIP_SWITCH_31_0 60000200

Symbol: ADDR_DIP_SWITCH_31_0
   Definitions
      At line 23 in file app\add64.s
   Uses
      At line 60 in file app\add64.s
Comment: ADDR_DIP_SWITCH_31_0 used once
ADDR_LCD_BIN 60000330

Symbol: ADDR_LCD_BIN
   Definitions
      At line 28 in file app\add64.s
   Uses
      At line 83 in file app\add64.s
Comment: ADDR_LCD_BIN used once
ADDR_LCD_BLUE 60000344

Symbol: ADDR_LCD_BLUE
   Definitions
      At line 27 in file app\add64.s
   Uses
      At line 46 in file app\add64.s
Comment: ADDR_LCD_BLUE used once
ADDR_LCD_GREEN 60000342

Symbol: ADDR_LCD_GREEN
   Definitions
      At line 26 in file app\add64.s
   Uses
      None
Comment: ADDR_LCD_GREEN unused
ADDR_LCD_RED 60000340

Symbol: ADDR_LCD_RED
   Definitions
      At line 25 in file app\add64.s
   Uses
      None
Comment: ADDR_LCD_RED unused
BACKLIGHT_FULL 0000FFFF

Symbol: BACKLIGHT_FULL
   Definitions
      At line 30 in file app\add64.s
   Uses
      At line 47 in file app\add64.s
Comment: BACKLIGHT_FULL used once
MASK_KEY_T0 00000001

Symbol: MASK_KEY_T0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 29 in file app\add64.s
   Uses
      At line 110 in file app\add64.s
Comment: MASK_KEY_T0 used once
8 symbols
350 symbols in table
