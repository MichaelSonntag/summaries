


ARM Macro Assembler    Page 1 


    1 00000000         ; ------------------------------------------------------
                       ------------
    2 00000000         ; --  _____       ______  _____                         
                                  -
    3 00000000         ; -- |_   _|     |  ____|/ ____|                        
                                  -
    4 00000000         ; --   | |  _ __ | |__  | (___    Institute of Embedded 
                       Systems    -
    5 00000000         ; --   | | | '_ \|  __|  \___ \   Zurich University of  
                                  -
    6 00000000         ; --  _| |_| | | | |____ ____) |  Applied Sciences      
                                  -
    7 00000000         ; -- |_____|_| |_|______|_____/   8401 Winterthur, Switz
                       erland     -
    8 00000000         ; ------------------------------------------------------
                       ------------
    9 00000000         ; --
   10 00000000         ; -- table.s
   11 00000000         ; --
   12 00000000         ; -- CT1 P04 Ein- und Ausgabe von Tabellenwerten
   13 00000000         ; --
   14 00000000         ; -- $Id: table.s 800 2014-10-06 13:19:25Z ruan $
   15 00000000         ; ------------------------------------------------------
                       ------------
   16 00000000         ;Directives
   17 00000000                 PRESERVE8
   18 00000000                 THUMB
   19 00000000         ; ------------------------------------------------------
                       ------------
   20 00000000         ; -- Symbolic Literals
   21 00000000         ; ------------------------------------------------------
                       ------------
   22 00000000 60000200 
                       ADDR_DIP_SWITCH_7_0
                               EQU              0x60000200
   23 00000000 60000201 
                       ADDR_DIP_SWITCH_15_8
                               EQU              0x60000201
   24 00000000 60000203 
                       ADDR_DIP_SWITCH_31_24
                               EQU              0x60000203
   25 00000000 60000100 
                       ADDR_LED_7_0
                               EQU              0x60000100
   26 00000000 60000101 
                       ADDR_LED_15_8
                               EQU              0x60000101
   27 00000000 60000102 
                       ADDR_LED_23_16
                               EQU              0x60000102
   28 00000000 60000103 
                       ADDR_LED_31_24
                               EQU              0x60000103
   29 00000000 60000210 
                       ADDR_BUTTONS
                               EQU              0x60000210
   30 00000000         
   31 00000000 00000001 
                       BITMASK_KEY_T0



ARM Macro Assembler    Page 2 


                               EQU              0x01
   32 00000000 0000000F 
                       BITMASK_LOWER_NIBBLE
                               EQU              0x0F
   33 00000000         
   34 00000000 60000114 
                       DDR_SEG7_BIN
                               EQU              0x60000114
   35 00000000         
   36 00000000 0000FFFF 
                       FOO     EQU              0xFFFF
   37 00000000         
   38 00000000         ; ------------------------------------------------------
                       ------------
   39 00000000         ; -- Variables
   40 00000000         ; ------------------------------------------------------
                       ------------
   41 00000000                 AREA             MyAsmVar, DATA, READWRITE
   42 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    byte_array
                               SPACE            32          ;byte array for val
                                                            ues
   43 00000020         
   44 00000020         
   45 00000020         
   46 00000020         
   47 00000020         ; END: To be programmed
   48 00000020                 ALIGN
   49 00000020         
   50 00000020         ; ------------------------------------------------------
                       ------------
   51 00000020         ; -- myCode
   52 00000020         ; ------------------------------------------------------
                       ------------
   53 00000020                 AREA             myCode, CODE, READONLY
   54 00000000         
   55 00000000         main    PROC
   56 00000000                 EXPORT           main
   57 00000000         
   58 00000000         readInput
   59 00000000 F000 F81C       BL               waitForKey  ; wait for key to b
                                                            e pressed and relea
                                                            sed
   60 00000004         
   61 00000004 4F13            LDR              R7, =BITMASK_LOWER_NIBBLE 
                                                            ; Bitmask 0x0F
   62 00000006         
   63 00000006 4814            LDR              R0, =ADDR_DIP_SWITCH_7_0 ; addr
                                                            ess of dip_switch_7
                                                            _0



ARM Macro Assembler    Page 3 


   64 00000008 4914            LDR              R1, =ADDR_DIP_SWITCH_15_8 ; add
                                                            ress of dip_switch_
                                                            15_8
   65 0000000A         
   66 0000000A         ; INPUT_VALUE = R2
   67 0000000A 7802            LDRB             R2, [R0]    ;     ; read value 
                                                            from dip_switch_7_0
                                                             and store it in R2
                                                            
   68 0000000C         
   69 0000000C         ; INDEX = R3
   70 0000000C 780B            LDRB             R3, [R1]    ;     ; read value 
                                                            from dip_switch_15_
                                                            8 and store it in R
                                                            3
   71 0000000E         
   72 0000000E         ; INDEX = R3
   73 0000000E 403B            ANDS             R3, R3, R7  ;     ; AND operati
                                                            on: input_index & 0
                                                            x0F  -> 0000 xxxx
   74 00000010         
   75 00000010 4C13            LDR              R4, =ADDR_LED_7_0 ;   ; address
                                                             of led_7_0
   76 00000012 4D14            LDR              R5, =ADDR_LED_15_8 ;   ; addres
                                                            s of led_15_8
   77 00000014         
   78 00000014 7022            STRB             R2, [R4]    ;     ; write input
                                                            _index value to led
                                                            _7_0
   79 00000016 702B            STRB             R3, [R5]    ;     ; write input
                                                            _value to led_15_8
   80 00000018         
   81 00000018         ; overwrite R0 with address of byte_array
   82 00000018 4813            LDR              R0, =byte_array ;   ; address o
                                                            f byte_array
   83 0000001A         
   84 0000001A 021E            LSLS             R6, R3, #8  ; move index to upp
                                                            er byte of halfword
                                                            
   85 0000001C         
   86 0000001C 4032            ANDS             R2, R2, R6  ; combine index and
                                                             value
   87 0000001E         
   88 0000001E         ; INDEX = R3
   89 0000001E 005B            LSLS             R3, R3, #1  ; multiply input_in
                                                            dex * 2 by left shi
                                                            ft of 1 single bit
   90 00000020         
   91 00000020         
   92 00000020 52C4            STRH             R4, [R0, R3] ;    ; write valoe
                                                             from dip_switch 0-
                                                            7 to byte_array wit
                                                            h offset of index(v
                                                            alue)
   93 00000022         
   94 00000022 4912            LDR              R1, =ADDR_DIP_SWITCH_31_24 ; ad
                                                            dress of dip_switch
                                                            _31_24
   95 00000024 4C12            LDR              R4, =ADDR_LED_31_24 ; address o



ARM Macro Assembler    Page 4 


                                                            f led_31_24
   96 00000026         
   97 00000026         ; OUTPUT_INDEX = R3
   98 00000026 780B            LDRB             R3, [R1]    ; read value from d
                                                            ip_switch_31_24 and
                                                             store it in R3
   99 00000028 403B            ANDS             R3, R3, R7  ; AND operation: ou
                                                            tput_index & 0x0F -
                                                            > 0000 xxxx
  100 0000002A 7023            STRB             R3, [R4]    ; write output_inde
                                                            x to led_31_24
  101 0000002C         
  102 0000002C 005B            LSLS             R3, R3, #1  ; multiply output_i
                                                            ndex * 2 by left sh
                                                            ift of 1 single bit
                                                            
  103 0000002E 5AC5            LDRH             R5, [R0, R3] ; retrieve half wo
                                                            rd from byte_array:
                                                             byte_array[R3]
  104 00000030         
  105 00000030 4F10            LDR              R7, =DDR_SEG7_BIN ; overwrite R
                                                            7 with 7 segment di
                                                            splay address 
  106 00000032 803D            STRH             R5, [R7, #0] ; write half word 
                                                            to 7 segment displa
                                                            y
  107 00000034         
  108 00000034 4C10            LDR              R4, =ADDR_LED_23_16 ; address o
                                                            f led_23_16
  109 00000036 7015            STRB             R5, [R2]    ; write value from 
                                                            byte_array to led_2
                                                            3_16
  110 00000038         
  111 00000038         
  112 00000038         ; END: To be programmed
  113 00000038 E7E2            B                readInput
  114 0000003A 00 00           ALIGN
  115 0000003C         
  116 0000003C         ; ------------------------------------------------------
                       ------------
  117 0000003C         ; Subroutines
  118 0000003C         ; ------------------------------------------------------
                       ------------
  119 0000003C         
  120 0000003C         ; wait for key to be pressed and released
  121 0000003C         waitForKey
  122 0000003C B407            PUSH             {R0, R1, R2}
  123 0000003E 490F            LDR              R1, =ADDR_BUTTONS ; laod base a
                                                            ddress of keys
  124 00000040 4A0F            LDR              R2, =BITMASK_KEY_T0 
                                                            ; load key mask T0
  125 00000042         
  126 00000042         waitForPress
  127 00000042 7808            LDRB             R0, [R1]    ; load key values
  128 00000044 4210            TST              R0, R2      ; check, if key T0 
                                                            is pressed
  129 00000046 D0FC            BEQ              waitForPress
  130 00000048         
  131 00000048         waitForRelease



ARM Macro Assembler    Page 5 


  132 00000048 7808            LDRB             R0, [R1]    ; load key values
  133 0000004A 4210            TST              R0, R2      ; check, if key T0 
                                                            is released
  134 0000004C D1FC            BNE              waitForRelease
  135 0000004E         
  136 0000004E BC07            POP              {R0, R1, R2}
  137 00000050 4770            BX               LR
  138 00000052 00 00           ALIGN
  139 00000054         
  140 00000054         ; ------------------------------------------------------
                       ------------
  141 00000054         ; End of code
  142 00000054         ; ------------------------------------------------------
                       ------------
  143 00000054                 ENDP
  144 00000054                 END
              0000000F 
              60000200 
              60000201 
              60000100 
              60000101 
              00000000 
              60000203 
              60000103 
              60000114 
              60000102 
              60000210 
              00000001 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\build\table.d -o.\build\table.o -I.\RTE\_Target_1 -IC:\Keil_v5\A
RM\PACK\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Keil_v5\ARM\PACK\InES\CTBo
ard14_DFP\4.0.2\Device\Include\m0 -IC:\Keil_v5\ARM\PACK\InES\CTBoard14_DFP\4.0.
2\HAL\Include -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --pred
efine="__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1" --list=.\build\ta
ble.lst app\table.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyAsmVar 00000000

Symbol: MyAsmVar
   Definitions
      At line 41 in file app\table.s
   Uses
      None
Comment: MyAsmVar unused
byte_array 00000000

Symbol: byte_array
   Definitions
      At line 42 in file app\table.s
   Uses
      At line 82 in file app\table.s
Comment: byte_array used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

main 00000000

Symbol: main
   Definitions
      At line 55 in file app\table.s
   Uses
      At line 56 in file app\table.s
Comment: main used once
myCode 00000000

Symbol: myCode
   Definitions
      At line 53 in file app\table.s
   Uses
      None
Comment: myCode unused
readInput 00000000

Symbol: readInput
   Definitions
      At line 58 in file app\table.s
   Uses
      At line 113 in file app\table.s
Comment: readInput used once
waitForKey 0000003C

Symbol: waitForKey
   Definitions
      At line 121 in file app\table.s
   Uses
      At line 59 in file app\table.s
Comment: waitForKey used once
waitForPress 00000042

Symbol: waitForPress
   Definitions
      At line 126 in file app\table.s
   Uses
      At line 129 in file app\table.s
Comment: waitForPress used once
waitForRelease 00000048

Symbol: waitForRelease
   Definitions
      At line 131 in file app\table.s
   Uses
      At line 134 in file app\table.s
Comment: waitForRelease used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_BUTTONS 60000210

Symbol: ADDR_BUTTONS
   Definitions
      At line 29 in file app\table.s
   Uses
      At line 123 in file app\table.s
Comment: ADDR_BUTTONS used once
ADDR_DIP_SWITCH_15_8 60000201

Symbol: ADDR_DIP_SWITCH_15_8
   Definitions
      At line 23 in file app\table.s
   Uses
      At line 64 in file app\table.s
Comment: ADDR_DIP_SWITCH_15_8 used once
ADDR_DIP_SWITCH_31_24 60000203

Symbol: ADDR_DIP_SWITCH_31_24
   Definitions
      At line 24 in file app\table.s
   Uses
      At line 94 in file app\table.s
Comment: ADDR_DIP_SWITCH_31_24 used once
ADDR_DIP_SWITCH_7_0 60000200

Symbol: ADDR_DIP_SWITCH_7_0
   Definitions
      At line 22 in file app\table.s
   Uses
      At line 63 in file app\table.s
Comment: ADDR_DIP_SWITCH_7_0 used once
ADDR_LED_15_8 60000101

Symbol: ADDR_LED_15_8
   Definitions
      At line 26 in file app\table.s
   Uses
      At line 76 in file app\table.s
Comment: ADDR_LED_15_8 used once
ADDR_LED_23_16 60000102

Symbol: ADDR_LED_23_16
   Definitions
      At line 27 in file app\table.s
   Uses
      At line 108 in file app\table.s
Comment: ADDR_LED_23_16 used once
ADDR_LED_31_24 60000103

Symbol: ADDR_LED_31_24
   Definitions
      At line 28 in file app\table.s
   Uses
      At line 95 in file app\table.s
Comment: ADDR_LED_31_24 used once
ADDR_LED_7_0 60000100

Symbol: ADDR_LED_7_0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 25 in file app\table.s
   Uses
      At line 75 in file app\table.s
Comment: ADDR_LED_7_0 used once
BITMASK_KEY_T0 00000001

Symbol: BITMASK_KEY_T0
   Definitions
      At line 31 in file app\table.s
   Uses
      At line 124 in file app\table.s
Comment: BITMASK_KEY_T0 used once
BITMASK_LOWER_NIBBLE 0000000F

Symbol: BITMASK_LOWER_NIBBLE
   Definitions
      At line 32 in file app\table.s
   Uses
      At line 61 in file app\table.s
Comment: BITMASK_LOWER_NIBBLE used once
DDR_SEG7_BIN 60000114

Symbol: DDR_SEG7_BIN
   Definitions
      At line 34 in file app\table.s
   Uses
      At line 105 in file app\table.s
Comment: DDR_SEG7_BIN used once
FOO 0000FFFF

Symbol: FOO
   Definitions
      At line 36 in file app\table.s
   Uses
      None
Comment: FOO unused
12 symbols
355 symbols in table
