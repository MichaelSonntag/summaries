


ARM Macro Assembler    Page 1 


    1 00000000         ; ------------------------------------------------------
                       ------------
    2 00000000         ; --  _____       ______  _____                         
                                  -
    3 00000000         ; -- |_   _|     |  ____|/ ____|                        
                                  -
    4 00000000         ; --   | |  _ __ | |__  | (___    Institute of Embedded 
                       Systems    -
    5 00000000         ; --   | | | '_ \|  __|  \___ \   Zurich University of  
                                  -
    6 00000000         ; --  _| |_| | | | |____ ____) |  Applied Sciences      
                                  -
    7 00000000         ; -- |_____|_| |_|______|_____/   8401 Winterthur, Switz
                       erland     -
    8 00000000         ; ------------------------------------------------------
                       ------------
    9 00000000         ; --
   10 00000000         ; -- main.s
   11 00000000         ; --
   12 00000000         ; -- CT1 P08 "Strukturierte Codierung" mit Assembler
   13 00000000         ; --
   14 00000000         ; -- $Id: struct_code.s 3787 2016-11-17 09:41:48Z kesr $
                       
   15 00000000         ; ------------------------------------------------------
                       ------------
   16 00000000         ;Directives
   17 00000000                 PRESERVE8
   18 00000000                 THUMB
   19 00000000         
   20 00000000         ; ------------------------------------------------------
                       ------------
   21 00000000         ; -- Address-Defines
   22 00000000         ; ------------------------------------------------------
                       ------------
   23 00000000         ; input
   24 00000000 60000200 
                       ADDR_DIP_SWITCH_7_0
                               EQU              0x60000200
   25 00000000 60000210 
                       ADDR_BUTTONS
                               EQU              0x60000210
   26 00000000         
   27 00000000         ; output
   28 00000000 60000100 
                       ADDR_LED_31_0
                               EQU              0x60000100
   29 00000000 60000114 
                       ADDR_7_SEG_BIN_DS3_0
                               EQU              0x60000114
   30 00000000 60000340 
                       ADDR_LCD_COLOUR
                               EQU              0x60000340
   31 00000000 60000300 
                       ADDR_LCD_ASCII
                               EQU              0x60000300
   32 00000000 60000302 
                       ADDR_LCD_ASCII_BIT_POS
                               EQU              0x60000302
   33 00000000 60000314 



ARM Macro Assembler    Page 2 


                       ADDR_LCD_ASCII_2ND_LINE
                               EQU              0x60000314
   34 00000000         
   35 00000000 00000001 
                       BITMASK EQU              0x00000001
   36 00000000         
   37 00000000         
   38 00000000         ; ------------------------------------------------------
                       ------------
   39 00000000         ; -- Program-Defines
   40 00000000         ; ------------------------------------------------------
                       ------------
   41 00000000         ; value for clearing lcd
   42 00000000 00000000 
                       ASCII_DIGIT_CLEAR
                               EQU              0x00000000
   43 00000000 00000028 
                       LCD_LAST_OFFSET
                               EQU              0x00000028
   44 00000000         
   45 00000000         ; offset for showing the digit in the lcd
   46 00000000 00000030 
                       ASCII_DIGIT_OFFSET
                               EQU              0x00000030
   47 00000000         
   48 00000000         ; lcd background colors to be written
   49 00000000 00000000 
                       DISPLAY_COLOUR_RED
                               EQU              0
   50 00000000 00000002 
                       DISPLAY_COLOUR_GREEN
                               EQU              2
   51 00000000 00000004 
                       DISPLAY_COLOUR_BLUE
                               EQU              4
   52 00000000         
   53 00000000         ; ------------------------------------------------------
                       ------------
   54 00000000         ; -- myConstants
   55 00000000         ; ------------------------------------------------------
                       ------------
   56 00000000                 AREA             myConstants, DATA, READONLY
   57 00000000         ; display defines for hex / dec
   58 00000000 42 69 74 
              20       DISPLAY_BIT
                               DCB              "Bit "
   59 00000004 32      DISPLAY_2_BIT
                               DCB              "2"
   60 00000005 34      DISPLAY_4_BIT
                               DCB              "4"
   61 00000006 38      DISPLAY_8_BIT
                               DCB              "8"
   62 00000007 00              ALIGN
   63 00000008         
   64 00000008         ; ------------------------------------------------------
                       ------------
   65 00000008         ; -- myCode
   66 00000008         ; ------------------------------------------------------
                       ------------



ARM Macro Assembler    Page 3 


   67 00000008                 AREA             myCode, CODE, READONLY
   68 00000000                 ENTRY
   69 00000000         
   70 00000000         ; imports for calls
   71 00000000                 import           adc_init
   72 00000000                 import           adc_get_value
   73 00000000         
   74 00000000         main    PROC
   75 00000000                 export           main
   76 00000000         ; 8 bit resolution, cont. sampling
   77 00000000 F7FF FFFE       BL               adc_init
   78 00000004 F000 F81D       BL               clear_lcd
   79 00000008         
   80 00000008         main_loop
   81 00000008         ; STUDENTS: To be programmed
   82 00000008         
   83 00000008         ; get adc_value and store it in R0
   84 00000008 F7FF FFFE       BL               adc_get_value
   85 0000000C         
   86 0000000C         ; Load address button and mask with (0000'0001)
   87 0000000C 4916            LDR              R1, =ADDR_BUTTONS
   88 0000000E 680A            LDR              R2, [R1]
   89 00000010 4B16            LDR              R3, =BITMASK
   90 00000012 401A            ANDS             R2, R2, R3
   91 00000014         
   92 00000014         ; Test if last bit is set to 1
   93 00000014 4219            TST              R1, R3
   94 00000016         
   95 00000016 D000            BEQ              T0_pressed
   96 00000018 D103            BNE              T0_not_pressed
   97 0000001A         
   98 0000001A         T0_pressed
   99 0000001A         
  100 0000001A         ; load address of LCD_Display
  101 0000001A 4915            LDR              R1, =ADDR_LCD_COLOUR
  102 0000001C 680A            LDR              R2, [R1]
  103 0000001E         
  104 0000001E         ; load address of green-value
  105 0000001E 4915            LDR              R1, =DISPLAY_COLOUR_GREEN
  106 00000020         
  107 00000020         ; store color to lcd-display
  108 00000020 600A            STR              R2, [R1]
  109 00000022         
  110 00000022         
  111 00000022         
  112 00000022         
  113 00000022         T0_not_pressed
  114 00000022         
  115 00000022         ; load address of switch 0 - 7
  116 00000022 4915            LDR              R1, =ADDR_DIP_SWITCH_7_0
  117 00000024         ; read value from switch 0 - 7
  118 00000024 780A            LDRB             R2, [R1]
  119 00000026         
  120 00000026         ; subtract switch-value - adc_value
  121 00000026 1A12            SUBS             R2, R2, R0
  122 00000028         
  123 00000028         ; if(diff >= 0) 
  124 00000028 2A00            CMP              R2, #0
  125 0000002A         



ARM Macro Assembler    Page 4 


  126 0000002A D000            BEQ              blue
  127 0000002C D104            BNE              red
  128 0000002E         
  129 0000002E         
  130 0000002E         blue
  131 0000002E         ; load address of LCD_Display
  132 0000002E 4910            LDR              R1, =ADDR_LCD_COLOUR
  133 00000030 680A            LDR              R2, [R1]
  134 00000032         
  135 00000032         ; load address of blue-value
  136 00000032 4912            LDR              R1, =DISPLAY_COLOUR_BLUE
  137 00000034         
  138 00000034         ; store color to lcd-display
  139 00000034 600A            STR              R2, [R1]
  140 00000036         
  141 00000036 E7E7            B                main_loop
  142 00000038         
  143 00000038         
  144 00000038         red
  145 00000038         ; load address of LCD_Display
  146 00000038 490D            LDR              R1, =ADDR_LCD_COLOUR
  147 0000003A 680A            LDR              R2, [R1]
  148 0000003C         
  149 0000003C         ; load address of blue-value
  150 0000003C 490F            LDR              R1, =DISPLAY_COLOUR_BLUE
  151 0000003E         
  152 0000003E         ; store color to lcd-display
  153 0000003E 600A            STR              R2, [R1]
  154 00000040         
  155 00000040         
  156 00000040         
  157 00000040         
  158 00000040         
  159 00000040         ; END: To be programmed
  160 00000040 E7E2            B                main_loop
  161 00000042         
  162 00000042         clear_lcd
  163 00000042 B407            PUSH             {R0, R1, R2}
  164 00000044 4A0E            LDR              R2, =0x0
  165 00000046         clear_lcd_loop
  166 00000046 480F            LDR              R0, =ADDR_LCD_ASCII
  167 00000048 1880            ADDS             R0, R0, R2  ; add index to lcd 
                                                            offset
  168 0000004A 490D            LDR              R1, =ASCII_DIGIT_CLEAR
  169 0000004C 6001            STR              R1, [R0]
  170 0000004E 1D12            ADDS             R2, R2, #4  ; increas index by 
                                                            4 (word step)
  171 00000050 2A28            CMP              R2, #LCD_LAST_OFFSET ; until in
                                                            dex reached last lc
                                                            d point
  172 00000052 D4F8            BMI              clear_lcd_loop
  173 00000054 BC07            POP              {R0, R1, R2}
  174 00000056 4770            BX               LR
  175 00000058         
  176 00000058         write_bit_ascii
  177 00000058 B403            PUSH             {R0, R1}
  178 0000005A 480B            LDR              R0, =ADDR_LCD_ASCII_BIT_POS
  179 0000005C 490B            LDR              R1, =DISPLAY_BIT
  180 0000005E 6809            LDR              R1, [R1]



ARM Macro Assembler    Page 5 


  181 00000060 6001            STR              R1, [R0]
  182 00000062 BC03            POP              {R0, R1}
  183 00000064 4770            BX               LR
  184 00000066         
  185 00000066                 ENDP
  186 00000066 00 00           ALIGN
  187 00000068         
  188 00000068         
  189 00000068         ; ------------------------------------------------------
                       ------------
  190 00000068         ; End of code
  191 00000068         ; ------------------------------------------------------
                       ------------
  192 00000068                 END
              60000210 
              00000001 
              60000340 
              00000002 
              60000200 
              00000004 
              00000000 
              60000300 
              60000302 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\build\struct_code.d -o.\build\struct_code.o -I.\RTE\_Target_1 -I
C:\Keil_v5\ARM\PACK\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Keil_v5\ARM\PA
CK\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:\Keil_v5\ARM\PACK\InES\CTBoar
d14_DFP\4.0.2\HAL\Include -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SE
TA 1" --predefine="__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1" --lis
t=.\build\struct_code.lst app\struct_code.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DISPLAY_2_BIT 00000004

Symbol: DISPLAY_2_BIT
   Definitions
      At line 59 in file app\struct_code.s
   Uses
      None
Comment: DISPLAY_2_BIT unused
DISPLAY_4_BIT 00000005

Symbol: DISPLAY_4_BIT
   Definitions
      At line 60 in file app\struct_code.s
   Uses
      None
Comment: DISPLAY_4_BIT unused
DISPLAY_8_BIT 00000006

Symbol: DISPLAY_8_BIT
   Definitions
      At line 61 in file app\struct_code.s
   Uses
      None
Comment: DISPLAY_8_BIT unused
DISPLAY_BIT 00000000

Symbol: DISPLAY_BIT
   Definitions
      At line 58 in file app\struct_code.s
   Uses
      At line 179 in file app\struct_code.s
Comment: DISPLAY_BIT used once
myConstants 00000000

Symbol: myConstants
   Definitions
      At line 56 in file app\struct_code.s
   Uses
      None
Comment: myConstants unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

T0_not_pressed 00000022

Symbol: T0_not_pressed
   Definitions
      At line 113 in file app\struct_code.s
   Uses
      At line 96 in file app\struct_code.s
Comment: T0_not_pressed used once
T0_pressed 0000001A

Symbol: T0_pressed
   Definitions
      At line 98 in file app\struct_code.s
   Uses
      At line 95 in file app\struct_code.s
Comment: T0_pressed used once
blue 0000002E

Symbol: blue
   Definitions
      At line 130 in file app\struct_code.s
   Uses
      At line 126 in file app\struct_code.s
Comment: blue used once
clear_lcd 00000042

Symbol: clear_lcd
   Definitions
      At line 162 in file app\struct_code.s
   Uses
      At line 78 in file app\struct_code.s
Comment: clear_lcd used once
clear_lcd_loop 00000046

Symbol: clear_lcd_loop
   Definitions
      At line 165 in file app\struct_code.s
   Uses
      At line 172 in file app\struct_code.s
Comment: clear_lcd_loop used once
main 00000000

Symbol: main
   Definitions
      At line 74 in file app\struct_code.s
   Uses
      At line 75 in file app\struct_code.s
Comment: main used once
main_loop 00000008

Symbol: main_loop
   Definitions
      At line 80 in file app\struct_code.s
   Uses
      At line 141 in file app\struct_code.s
      At line 160 in file app\struct_code.s

myCode 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: myCode
   Definitions
      At line 67 in file app\struct_code.s
   Uses
      None
Comment: myCode unused
red 00000038

Symbol: red
   Definitions
      At line 144 in file app\struct_code.s
   Uses
      At line 127 in file app\struct_code.s
Comment: red used once
write_bit_ascii 00000058

Symbol: write_bit_ascii
   Definitions
      At line 176 in file app\struct_code.s
   Uses
      None
Comment: write_bit_ascii unused
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_7_SEG_BIN_DS3_0 60000114

Symbol: ADDR_7_SEG_BIN_DS3_0
   Definitions
      At line 29 in file app\struct_code.s
   Uses
      None
Comment: ADDR_7_SEG_BIN_DS3_0 unused
ADDR_BUTTONS 60000210

Symbol: ADDR_BUTTONS
   Definitions
      At line 25 in file app\struct_code.s
   Uses
      At line 87 in file app\struct_code.s
Comment: ADDR_BUTTONS used once
ADDR_DIP_SWITCH_7_0 60000200

Symbol: ADDR_DIP_SWITCH_7_0
   Definitions
      At line 24 in file app\struct_code.s
   Uses
      At line 116 in file app\struct_code.s
Comment: ADDR_DIP_SWITCH_7_0 used once
ADDR_LCD_ASCII 60000300

Symbol: ADDR_LCD_ASCII
   Definitions
      At line 31 in file app\struct_code.s
   Uses
      At line 166 in file app\struct_code.s
Comment: ADDR_LCD_ASCII used once
ADDR_LCD_ASCII_2ND_LINE 60000314

Symbol: ADDR_LCD_ASCII_2ND_LINE
   Definitions
      At line 33 in file app\struct_code.s
   Uses
      None
Comment: ADDR_LCD_ASCII_2ND_LINE unused
ADDR_LCD_ASCII_BIT_POS 60000302

Symbol: ADDR_LCD_ASCII_BIT_POS
   Definitions
      At line 32 in file app\struct_code.s
   Uses
      At line 178 in file app\struct_code.s
Comment: ADDR_LCD_ASCII_BIT_POS used once
ADDR_LCD_COLOUR 60000340

Symbol: ADDR_LCD_COLOUR
   Definitions
      At line 30 in file app\struct_code.s
   Uses
      At line 101 in file app\struct_code.s
      At line 132 in file app\struct_code.s
      At line 146 in file app\struct_code.s

ADDR_LED_31_0 60000100



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: ADDR_LED_31_0
   Definitions
      At line 28 in file app\struct_code.s
   Uses
      None
Comment: ADDR_LED_31_0 unused
ASCII_DIGIT_CLEAR 00000000

Symbol: ASCII_DIGIT_CLEAR
   Definitions
      At line 42 in file app\struct_code.s
   Uses
      At line 168 in file app\struct_code.s
Comment: ASCII_DIGIT_CLEAR used once
ASCII_DIGIT_OFFSET 00000030

Symbol: ASCII_DIGIT_OFFSET
   Definitions
      At line 46 in file app\struct_code.s
   Uses
      None
Comment: ASCII_DIGIT_OFFSET unused
BITMASK 00000001

Symbol: BITMASK
   Definitions
      At line 35 in file app\struct_code.s
   Uses
      At line 89 in file app\struct_code.s
Comment: BITMASK used once
DISPLAY_COLOUR_BLUE 00000004

Symbol: DISPLAY_COLOUR_BLUE
   Definitions
      At line 51 in file app\struct_code.s
   Uses
      At line 136 in file app\struct_code.s
      At line 150 in file app\struct_code.s

DISPLAY_COLOUR_GREEN 00000002

Symbol: DISPLAY_COLOUR_GREEN
   Definitions
      At line 50 in file app\struct_code.s
   Uses
      At line 105 in file app\struct_code.s
Comment: DISPLAY_COLOUR_GREEN used once
DISPLAY_COLOUR_RED 00000000

Symbol: DISPLAY_COLOUR_RED
   Definitions
      At line 49 in file app\struct_code.s
   Uses
      None
Comment: DISPLAY_COLOUR_RED unused
LCD_LAST_OFFSET 00000028

Symbol: LCD_LAST_OFFSET



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 43 in file app\struct_code.s
   Uses
      At line 171 in file app\struct_code.s
Comment: LCD_LAST_OFFSET used once
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

adc_get_value 00000000

Symbol: adc_get_value
   Definitions
      At line 72 in file app\struct_code.s
   Uses
      At line 84 in file app\struct_code.s
Comment: adc_get_value used once
adc_init 00000000

Symbol: adc_init
   Definitions
      At line 71 in file app\struct_code.s
   Uses
      At line 77 in file app\struct_code.s
Comment: adc_init used once
2 symbols
367 symbols in table
